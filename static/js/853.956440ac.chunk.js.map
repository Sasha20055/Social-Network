{"version":3,"file":"static/js/853.956440ac.chunk.js","mappings":"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","sources":["webpack://socialn/./src/components/Users/Users.module.sass?1a4a","webpack://socialn/./src/components/common/Paginator/Paginator.module.sass?4a9f","components/common/Paginator/Paginator.jsx","webpack://socialn/./src/components/Users/User/User.module.sass?0fab","components/Users/User/User.jsx","components/Users/Users.jsx","redux/usersSelectors.js","components/Users/UsersContainer.jsx","components/common/FormsControls/FormsControls.jsx","utilities/validation.js","webpack://socialn/./src/components/common/FormsControls/FormsControls.module.sass?7f83"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"body\":\"Users_body__hPv5p\",\"users\":\"Users_users__ru7oe\",\"findUser\":\"Users_findUser__XZo0K\",\"contactFormBlock\":\"Users_contactFormBlock__1-CVk\",\"usersBlock\":\"Users_usersBlock__J7u36\"};","// extracted by mini-css-extract-plugin\nexport default {\"paginator\":\"Paginator_paginator__PY+lS\",\"pagesNumbers\":\"Paginator_pagesNumbers__9-BNJ\",\"selectedPage\":\"Paginator_selectedPage__B2sDT\"};","import React, { useState } from \"react\";\r\nimport s from \"./Paginator.module.sass\";\r\n\r\n\r\n\r\nconst Paginator = React.memo((props) => {\r\n\r\n  let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize)\r\n\r\n  let pages = []\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / props.portionSize)\r\n  let [portionNumber, setPortionNumber] = useState(1)\r\n  let leftPortionNumber = (portionNumber - 1) * props.portionSize + 1\r\n  let rightPortionNumber = portionNumber * props.portionSize\r\n\r\n\r\n  return (\r\n    <div className={s.paginator}>\r\n      {portionNumber > 1 && <button className={s.Prev} onClick={() => { setPortionNumber(portionNumber - 1) }}>prev</button>}\r\n      <div className={s.pagesNumbers}>\r\n        {pages\r\n          .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n          .map(p => {\r\n            return <span key={p} className={props.currentPage === p && s.selectedPage} onClick={() => { props.onPageChange(p) }}>{p}</span>\r\n          })}\r\n      </div>\r\n\r\n      {portionCount > portionNumber && <button className={s.Next} onClick={() => { setPortionNumber(portionNumber + 1) }}>next</button>}\r\n    </div>\r\n  )\r\n})\r\n\r\n\r\n\r\n\r\nexport default Paginator;","// extracted by mini-css-extract-plugin\nexport default {\"avaUser\":\"User_avaUser__dU4Ck\",\"ava\":\"User_ava__jIxK6\",\"user\":\"User_user__1PjcU\",\"info\":\"User_info__sNWFR\"};","import React from \"react\";\r\nimport s from \"./User.module.sass\";\r\nimport UserIcon from \"../../../assets/images/unknown.png\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst User = React.memo(({ user, ...props }) => {\r\n  return (\r\n    <div className={s.user}>\r\n      <NavLink to={'/profile/' + user.id} clasName={s.avaUser}>\r\n        <img className={s.ava} src={user.photos.small != null ? user.photos.small : UserIcon} alt=\"User-icon\" />\r\n      </NavLink>\r\n      <div className={s.info}>\r\n        <NavLink to={'/profile/' + user.id} clasName={s.nameUser}>\r\n          <h2 className={s.nickName}>{user.name}</h2>\r\n        </NavLink>\r\n        <p className={s.status}>{user.status}</p>\r\n        {user.followed\r\n          ? <button disabled={props.isFollowing.some(id => id === user.id)} onClick={() => { props.UnFollow(user.id) }}>Unfollow</button>\r\n          : <button disabled={props.isFollowing.some(id => id === user.id)} onClick={() => { props.Follow(user.id) }}>Follow</button>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default User;","import React from \"react\";\r\nimport s from \"./Users.module.sass\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User/User\"\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport { required } from '../../utilities/validation';\r\n\r\n\r\nconst Users = React.memo(({ totalUsersCount, pageSize, onPageChange, currentPage, ...props }) => {\r\n\r\n  const onSubmit = (formData) => {\r\n    props.getUsersByName(formData.nameUser)\r\n  }\r\n\r\n  return (\r\n    <div className={s.body}>\r\n      <h1>Пользователи</h1>\r\n      <div className={s.usersBlock}>\r\n        <div className={s.findUser}>\r\n          <FindUserReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n        <div className={s.users}>\r\n          {\r\n            props.users.map(user =>\r\n              <User key={user.id} user={user} isFollowing={props.isFollowing} UnFollow={props.UnFollow} Follow={props.Follow} />\r\n            )\r\n          }\r\n        </div>\r\n        <Paginator totalItemsCount={totalUsersCount} pageSize={pageSize} onPageChange={onPageChange} currentPage={currentPage} portionSize={6} />\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\n\r\nconst FindUserForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={s.contactFormBlock}>\r\n      <Field name={\"nameUser\"} component={Input} type={\"text\"} placeholder={\"name of person\"} validate={[required]} />\r\n      <button className={s.contactBtn}>Search</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst FindUserReduxForm = reduxForm({ form: 'FindUser' })(FindUserForm)\r\n\r\n\r\n\r\nexport default Users;","export const getUsers = (state) => {\r\n  return state.usersPage.users\r\n}\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage\r\n}\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount\r\n}\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching\r\n}\r\nexport const getIsFollowing = (state) => {\r\n  return state.usersPage.isFollowing\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Follow, getRequestUsers, UnFollow, getUsersByName } from \"../../redux/usersReducer\";\r\nimport Users from './Users';\r\nimport { compose } from \"redux\";\r\nimport { getIsFollowing, getIsFetching, getTotalUsersCount, getPageSize, getCurrentPage, getUsers } from \"../../redux/usersSelectors\"\r\n\r\n\r\nclass UsersCont extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getRequestUsers(this.props.currentPage, this.props.pageSize)\r\n  }\r\n\r\n  onPageChange = (numberPage) => {\r\n    this.props.getRequestUsers(numberPage, this.props.pageSize)\r\n  }\r\n\r\n  render() {\r\n    return (<>\r\n      {this.props.isFetching ? <img src=\"https://flevix.com/wp-content/uploads/2019/07/Spin-Preloader-1.gif\"></img> : null}\r\n      <Users\r\n        {...this.props}\r\n        onPageChange={this.onPageChange}\r\n      />\r\n    </>)\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    currentPage: getCurrentPage(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    isFetching: getIsFetching(state),\r\n    isFollowing: getIsFollowing(state),\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { Follow, UnFollow, getRequestUsers, getUsersByName })\r\n)(UsersCont);","import React from \"react\";\r\nimport s from \"./FormsControls.module.sass\";\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error\r\n  return (\r\n    <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n      <div>\r\n        <textarea {...input} {...props} className={s.textarea} />\r\n      </div>\r\n      {hasError && <span className={s.someError}>{meta.error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Input = ({ input, meta: {touched, error}, ...props }) => {\r\n  const hasError = touched && error\r\n  return (\r\n    <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n      <div>\r\n        <input {...input} {...props} className={s.input} />\r\n      </div>\r\n      {hasError && <span className={s.someError}>{error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const createForm = (name, component, type, placeholder=\"\", validators=[], props = {}) => {\r\n  return (<div className={`s.${name}`}>\r\n    <Field\r\n      name={name}\r\n      component={component}\r\n      type={type}\r\n      placeholder={placeholder}\r\n      validate={validators}\r\n      {...props}\r\n    />\r\n  </div>)\r\n}","export const required = value => {\r\n  if (value) return undefined;\r\n  return 'require error'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `max length ${maxLength} symbols!`;\r\n  return undefined\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__dV+OA\",\"error\":\"FormsControls_error__ZjcXj\",\"input\":\"FormsControls_input__kr6kc\",\"someError\":\"FormsControls_someError__PrG3Q\",\"commonError\":\"FormsControls_commonError__Rlpkm\",\"textarea\":\"FormsControls_textarea__xpgxZ\"};"],"names":["React","props","pagesCount","Math","ceil","totalItemsCount","pageSize","pages","i","push","portionCount","portionSize","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","className","s","onClick","filter","p","map","currentPage","onPageChange","user","to","id","clasName","src","photos","small","UserIcon","alt","name","status","followed","disabled","isFollowing","some","UnFollow","Follow","Users","totalUsersCount","FindUserReduxForm","onSubmit","formData","getUsersByName","nameUser","users","reduxForm","form","handleSubmit","Field","component","Input","type","placeholder","validate","required","getUsers","state","usersPage","getCurrentPage","getPageSize","getTotalUsersCount","getIsFetching","isFetching","getIsFollowing","UsersCont","numberPage","getRequestUsers","this","compose","connect","Textarea","input","meta","hasError","touched","error","createForm","validators","value","maxLengthCreator","maxLength","length"],"sourceRoot":""}