{"version":3,"file":"static/js/504.f901e4a0.chunk.js","mappings":"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","sources":["webpack://socialn/./src/components/Dialogs/Dialogs.module.sass?c081","webpack://socialn/./src/components/Dialogs/Contacts/Contacts.module.sass?5432","webpack://socialn/./src/components/Dialogs/Contacts/Contact/Contact.module.sass?5895","components/Dialogs/Contacts/Contact/Contact.jsx","components/Dialogs/Contacts/Contacts.jsx","webpack://socialn/./src/components/Dialogs/Chat/Chat.module.sass?baad","webpack://socialn/./src/components/Dialogs/Chat/Writer/Writer.module.sass?d908","components/Dialogs/Chat/Writer/Writer.jsx","webpack://socialn/./src/components/Dialogs/Chat/SendingMessage/SendingMessage.module.sass?1dd9","components/Dialogs/Chat/SendingMessage/SendingMessage.jsx","components/Dialogs/Chat/Chat.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/common/FormsControls/FormsControls.jsx","hoc/withAuthRedirect.js","utilities/validation.js","webpack://socialn/./src/components/common/FormsControls/FormsControls.module.sass?7f83"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Dialogs_wrapper__DeaPX\",\"chat\":\"Dialogs_chat__ZvZUT\"};","// extracted by mini-css-extract-plugin\nexport default {\"contactsBlock\":\"Contacts_contactsBlock__UoVP+\",\"contacts\":\"Contacts_contacts__oDeh0\",\"contactFormBlock\":\"Contacts_contactFormBlock__x5V7f\",\"contactForm\":\"Contacts_contactForm__0Lh7d\"};","// extracted by mini-css-extract-plugin\nexport default {\"ava\":\"Contact_ava__y+ZB-\",\"contact\":\"Contact_contact__PEb8e\",\"active\":\"Contact_active__WYlI6\",\"info\":\"Contact_info__mXtfS\"};","import React from 'react'\r\nimport s from './Contact.module.sass';\r\nimport UserIcon from \"../../../../assets/images/unknown.png\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Contact = React.memo((props) => {\r\n  console.log('debug!')\r\n  return (\r\n    <div className={s.contact}>\r\n      <NavLink to={'/dialogs/' + props.id} className={navData => navData.isActive ? s.active : s.link}>\r\n        <img src={props.ava != null ? props.ava : UserIcon} className={s.ava}></img>\r\n        <div className={s.info}>\r\n          <h2 className={s.nickName}>{props.nickName}</h2>\r\n          <p className={s.lastActivity}>{props.lastActivity}</p>\r\n        </div>\r\n      </NavLink>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Contact","import React from 'react'\r\nimport s from './Contacts.module.sass';\r\nimport Contact from './Contact/Contact';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../../common/FormsControls/FormsControls';\r\nimport { required } from '../../../utilities/validation';\r\n\r\n\r\nconst Contacts = React.memo((props) => {\r\n  const onSubmit = (formData) => {\r\n    props.findPerson(formData.nameContact)\r\n  }\r\n\r\n  return (\r\n    <div className={s.contactsBlock}>\r\n      <div className={s.findFriend}>\r\n        <FindContactReduxForm onSubmit={onSubmit} />\r\n      </div>\r\n      <div className={s.contacts}>\r\n        {(props.user && props.user.userId != props.YourId) && <Contact key={props.user.id} nickName={props.user.fullName} id={props.user.userId} ava={props.user.photos.small} />}\r\n        {props.users.map(user => <Contact key={user.id} nickName={user.name ? user.name : user.userName} id={user.id} ava={user.photos.small} lastActivity={user.lastUserActivityDate} />)}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nconst FindContactForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={s.contactFormBlock}>\r\n      <Field name={\"nameContact\"} component={Input} type={\"text\"} placeholder={\"name of person\"} validate={[required]} />\r\n      <button className={s.contactBtn}>Write</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst FindContactReduxForm = reduxForm({ form: 'FindPerson' })(FindContactForm)\r\n\r\n\r\nexport default Contacts","// extracted by mini-css-extract-plugin\nexport default {\"chat\":\"Chat_chat__CcF6+\",\"messages\":\"Chat_messages__i7JOP\",\"header\":\"Chat_header__yunV+\",\"dialogWith\":\"Chat_dialogWith__dkHJA\"};","// extracted by mini-css-extract-plugin\nexport default {\"you\":\"Writer_you__T2F8H\",\"me\":\"Writer_me__042Pz\",\"delView\":\"Writer_delView__-gGQ9\",\"message\":\"Writer_message__3qKcN\",\"ava\":\"Writer_ava__xLGVz\",\"deleteMsg\":\"Writer_deleteMsg__N4uF-\",\"viewed\":\"Writer_viewed__NqmGT\",\"unViewed\":\"Writer_unViewed__cldsU\"};","import s from './Writer.module.sass';\r\nimport UserIcon from \"../../../../assets/images/unknown.png\";\r\n\r\n\r\n\r\nconst Writer = (props) => {\r\n\r\n  const deleteMessage = () => {\r\n    props.deleteForMe(props.message.id)\r\n  }\r\n  const messageToSpam = () => {\r\n    props.messageToSpam(props.message.id)\r\n  }\r\n\r\n  return (\r\n    <div className={props.isMe ? s.me : s.you}>\r\n      <div className={s.message}>\r\n        <p>{props.message.body}</p>\r\n      </div>\r\n      <div className={s.delView}>\r\n        <span className={props.message.viewed ? s.viewed : s.unViewed}></span>\r\n        <button onClick={deleteMessage} className={s.deleteMsg}></button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Writer","// extracted by mini-css-extract-plugin\nexport default {\"sendingMessageForm\":\"SendingMessage_sendingMessageForm__WJFy5\",\"sendBtn\":\"SendingMessage_sendBtn__lbC3N\"};","import React from 'react';\r\nimport s from './SendingMessage.module.sass';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator } from '../../../../utilities/validation';\r\n\r\n\r\nconst maxLength300 = maxLengthCreator(50)\r\n\r\nconst SendingMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={s.sendingMessageForm}>\r\n      <Field name={props.nameForm} component={Textarea} type={\"text\"} placeholder={\"message\"}  />\r\n      <button className={s.sendBtn}></button>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nconst DialogReduxForm = reduxForm({ form: 'dialog' })(SendingMessageForm)\r\n\r\n\r\nconst SendingMessage = (props) => {\r\n  let nameForm = 'message'\r\n  const onSubmit = (formData) => {\r\n    props.sendMessage(props.chatWith.length > 0 && props.chatWith[0].id, formData.message)\r\n  }\r\n\r\n  return (\r\n    <DialogReduxForm onSubmit={onSubmit} chatWith={props.chatWith} nameForm={nameForm} />\r\n  )\r\n}\r\n\r\nexport default SendingMessage","import { useRef, useEffect } from 'react'\r\nimport React from 'react';\r\nimport s from './Chat.module.sass';\r\nimport Writer from './Writer/Writer';\r\nimport SendingMessage from './SendingMessage/SendingMessage'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Chat = React.memo((props) => {\r\n\r\n  const messagesEndRef = useRef(null)\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n  }\r\n\r\n  useEffect(() => {\r\n    scrollToBottom()\r\n  }, [props.messageData]);\r\n\r\n  const message = props.messageData\r\n    .map(message => <Writer\r\n      key={message.id}\r\n      message={message}\r\n      isMe={message.senderId === props.YourId}\r\n      deleteForMe={props.deleteForMe}\r\n      chatWith={props.chatWith}\r\n      profile={props.profile}\r\n      messageToSpam={props.messageToSpam}\r\n    />)\r\n\r\n  const more = () => {\r\n    props.moreMessages(props.chatWith[0].id, props.currentPage + 1, 20, props.messageData)\r\n    props.SetCurrentPage(props.currentPage + 1)\r\n  }\r\n\r\n  const chatWithName = props.chatWith[0] && (props.chatWith[0].userName ? props.chatWith[0].userName : props.chatWith[0].name)\r\n\r\n  return (\r\n    <div className={s.chat}>\r\n      <NavLink to={'/profile/' + (props.chatWith[0] && props.chatWith[0].id)} className={s.dialogWith}>\r\n        <h2 className={s.header}>{chatWithName}</h2>\r\n      </NavLink>\r\n      <div className={s.messages}>\r\n        {props.currentPage < props.portionCount && <button onClick={() => { more() }} className={s.moreBtn}>more</button>}\r\n        {message}\r\n        <div ref={messagesEndRef}></div>\r\n      </div>\r\n      {props.users && <SendingMessage\r\n        sendMessage={props.sendMessage}\r\n        users={props.users}\r\n        chatWith={props.chatWith}\r\n        profile={props.profile}\r\n      />}\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Chat","import React from 'react'\r\nimport s from './Dialogs.module.sass';\r\nimport Contacts from './Contacts/Contacts';\r\nimport Chat from './Chat/Chat';\r\n\r\nconst Dialogs = React.memo((props) => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <h1>Чат</h1>\r\n      <div className={s.chat}>\r\n        <Contacts users={props.users} getProfile={props.getProfile} user={props.user} YourId={props.YourId} findPerson={props.findPerson} />\r\n        <Chat\r\n          messageData={props.messageData}\r\n          sendMessage={props.sendMessage}\r\n          chatWith={props.chatWith}\r\n          deleteForMe={props.deleteForMe}\r\n          YourId={props.YourId}\r\n          profile={props.profile}\r\n          listOfMessages={props.listOfMessages}\r\n          SetPageSize={props.SetPageSize}\r\n          currentPage={props.currentPage}\r\n          totalMessageCount={props.totalMessageCount}\r\n          pageSize={props.pageSize}\r\n          messageToSpam={props.messageToSpam}\r\n          users={props.users}\r\n          portionCount={props.portionCount}\r\n          SetCurrentPage={props.SetCurrentPage}\r\n          moreMessages={props.moreMessages}\r\n        />\r\n        {props.newMessages > 0 && <div>New Messages: {props.newMessages}</div>}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Dialogs","import React, {useState} from \"react\";\r\nimport { connect } from \"react-redux\"\r\nimport { listOfMessages, sendMessage, deleteForMe, allDialogs, SetPageSize, messageToSpam, listOfNewMessages, SetCurrentPage, startChatting, moreMessages, findPerson } from '../../redux/dialogsReducer';\r\nimport { getProfile } from \"../../redux/profileReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nexport function withRouter(Children) {\r\n  return (props) => {\r\n    const match = { params: useParams() };\r\n    return <Children {...props} match={match} />\r\n  }\r\n}\r\n\r\n\r\n\r\nclass DialogsCont extends React.Component {\r\n  \r\n  startTheDialog() {\r\n    const userId = this.props.match.params.userId\r\n    if (userId != null) {\r\n      this.props.startChatting(userId, this.props.currentPage, this.props.pageSize)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getProfile(this.props.YourId)\r\n    this.props.listOfNewMessages()\r\n    this.props.allDialogs()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      let isFriend = false\r\n      this.props.users.map(user => user.id == this.props.match.params.userId ? isFriend = true : null)\r\n      if(isFriend && this.props.profile.userId != this.props.YourId) {\r\n        this.props.getProfile(this.props.YourId)\r\n      }\r\n      this.startTheDialog()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (<>\r\n      <Dialogs\r\n        {...this.props}\r\n      />\r\n    </>)\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    chatWith: state.dialogsPage.chatWith,\r\n    users: state.dialogsPage.accounts,\r\n    messageData: state.dialogsPage.messages,\r\n    user: state.profilePage.profile,\r\n    YourId: state.auth.userId,\r\n    profile: state.profilePage.profile,\r\n    currentPage: state.dialogsPage.currentPage,\r\n    totalMessageCount: state.dialogsPage.totalMessageCount,\r\n    pageSize: state.dialogsPage.pageSize,\r\n    newMessages: state.dialogsPage.newMessages,\r\n    portionCount: state.dialogsPage.portionCount\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps,\r\n    {\r\n      listOfMessages, sendMessage,\r\n      deleteForMe, getProfile,\r\n      allDialogs, SetPageSize,\r\n      messageToSpam, listOfNewMessages,\r\n      SetCurrentPage, startChatting,\r\n      moreMessages, findPerson\r\n    }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(DialogsCont)","import React from \"react\";\r\nimport s from \"./FormsControls.module.sass\";\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error\r\n  return (\r\n    <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n      <div>\r\n        <textarea {...input} {...props} className={s.textarea} />\r\n      </div>\r\n      {hasError && <span className={s.someError}>{meta.error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Input = ({ input, meta: {touched, error}, ...props }) => {\r\n  const hasError = touched && error\r\n  return (\r\n    <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n      <div>\r\n        <input {...input} {...props} className={s.input} />\r\n      </div>\r\n      {hasError && <span className={s.someError}>{error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const createForm = (name, component, type, placeholder=\"\", validators=[], props = {}) => {\r\n  return (<div className={`s.${name}`}>\r\n    <Field\r\n      name={name}\r\n      component={component}\r\n      type={type}\r\n      placeholder={placeholder}\r\n      validate={validators}\r\n      {...props}\r\n    />\r\n  </div>)\r\n}","import React from \"react\"\r\nimport { Navigate } from 'react-router-dom'\r\nimport { connect } from \"react-redux\"\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport const withAuthRedirect = (Container) => {\r\n  class RedirectComponent extends React.Component{\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to='/login' />\r\n\r\n      return <Container {...this.props} />\r\n    }    \r\n  }\r\n  let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n  return ConnectedRedirectComponent\r\n}\r\n","export const required = value => {\r\n  if (value) return undefined;\r\n  return 'require error'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `max length ${maxLength} symbols!`;\r\n  return undefined\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__dV+OA\",\"error\":\"FormsControls_error__ZjcXj\",\"input\":\"FormsControls_input__kr6kc\",\"someError\":\"FormsControls_someError__PrG3Q\",\"commonError\":\"FormsControls_commonError__Rlpkm\",\"textarea\":\"FormsControls_textarea__xpgxZ\"};"],"names":["React","props","console","log","className","s","to","id","navData","isActive","src","ava","UserIcon","nickName","lastActivity","Contacts","FindContactReduxForm","onSubmit","formData","findPerson","nameContact","user","userId","YourId","fullName","photos","small","users","map","name","userName","lastUserActivityDate","reduxForm","form","handleSubmit","Field","component","Input","type","placeholder","validate","required","isMe","message","body","viewed","onClick","deleteForMe","DialogReduxForm","maxLengthCreator","nameForm","Textarea","sendMessage","chatWith","length","messagesEndRef","useRef","useEffect","current","scrollIntoView","behavior","scrollToBottom","messageData","senderId","profile","messageToSpam","chatWithName","currentPage","portionCount","moreMessages","SetCurrentPage","ref","getProfile","listOfMessages","SetPageSize","totalMessageCount","pageSize","newMessages","withRouter","Children","match","params","useParams","DialogsCont","this","startChatting","listOfNewMessages","allDialogs","prevProps","prevState","snapshot","isFriend","startTheDialog","compose","connect","state","dialogsPage","accounts","messages","profilePage","auth","withAuthRedirect","input","meta","hasError","touched","error","createForm","validators","mapStateToProps","isAuth","Container","RedirectComponent","value","maxLength"],"sourceRoot":""}