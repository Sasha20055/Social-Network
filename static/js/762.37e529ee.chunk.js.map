{"version":3,"file":"static/js/762.37e529ee.chunk.js","mappings":"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","sources":["webpack://socialn/./src/components/Profile/Person/Person.module.sass?3bd6","components/Profile/Status/Status.tsx","webpack://socialn/./src/components/common/Friends/Friends.module.sass?110c","components/common/Friends/Friends.tsx","components/common/Friends/FriendsContainer.tsx","components/Profile/Person/Person.tsx","webpack://socialn/./src/components/Profile/Profile.module.sass?a8c5","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","hoc/withAuthRedirect.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"person\":\"Person_person__hRlAr\",\"ava\":\"Person_ava__7u6m+\",\"info\":\"Person_info__O3iGS\",\"fullName\":\"Person_fullName__i8RVM\",\"secondBlock\":\"Person_secondBlock__0dowO\",\"contacts\":\"Person_contacts__5D+xO\",\"friends\":\"Person_friends__ZHlgB\",\"contact\":\"Person_contact__Y3k63\"};","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./Status.module.sass\"\r\n\r\ntype PropsType = {\r\n  status: string\r\n  UpdateStatus: (status: string) => void\r\n  isOwner: boolean\r\n}\r\n\r\nconst Status = React.memo<PropsType>((props) => {\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [status, setStatus] = useState(props.status)\r\n\r\n  useEffect(\r\n    () => setStatus(props.status),\r\n    [props.status]\r\n  )\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.UpdateStatus(status)\r\n  }\r\n\r\n  const onStatusChange = (e: any) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!editMode &&\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status}</span>\r\n        </div>\r\n      }\r\n      {editMode &&\r\n        <div>\r\n          {props.isOwner\r\n            ? <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status} type=\"text\" />\r\n            : <b>{status}</b>\r\n          }\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n})\r\n\r\n\r\n\r\nexport default Status","// extracted by mini-css-extract-plugin\nexport default {\"friends\":\"Friends_friends__xwpru\",\"friend\":\"Friends_friend__Dp8eu\",\"ava\":\"Friends_ava__9T88a\"};","import React from \"react\";\r\nimport s from \"./Friends.module.sass\"\r\nimport UserIcon from \"../../../assets/images/unknown.png\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { usersType, userType } from \"../../../types/types\";\r\n\r\ntype FriendsPropsType = {\r\n  friends: usersType\r\n\r\n}\r\n\r\nconst Friends = React.memo<FriendsPropsType>((props) => {\r\n  return (\r\n    <div className={s.friends}>\r\n      {props.friends && props.friends.items.map(item => <Friend item={item}/>)}\r\n    </div>\r\n  )\r\n})\r\n\r\ntype FriendPropsType = {\r\n  item: userType\r\n}\r\n\r\nconst Friend: React.FC<FriendPropsType> = (props) => {\r\n  return (\r\n    <div className={s.friend}>\r\n      <NavLink to={\"/profile/\" + props.item.id} >\r\n        <img className={s.ava} src={props.item.photos.small != null ? props.item.photos.small : UserIcon} alt=\"User-icon\" />\r\n      </NavLink>\r\n      <p>{props.item.name}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Friends","import React from \"react\";\r\nimport { getFriends } from \"../../../redux/profileReducer\";\r\nimport Friends from \"./Friends\";\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { appStateType } from \"../../../redux/Store\";\r\nimport { usersType } from \"../../../types/types\";\r\n\r\ntype PropsType = {\r\n  getFriends: () => void\r\n  friends: usersType\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n  friends: usersType\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n  getFriends: () => void\r\n}\r\n\r\ntype mapOwnPropsType = {}\r\n\r\nclass FriendsContainer extends React.Component<PropsType> {\r\n\r\n  componentDidMount() {\r\n    this.props.getFriends()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Friends {...this.props} />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state: appStateType) => {\r\n  return {\r\n    friends: state.profilePage.friends\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect<mapStateToPropsType, mapDispatchToPropsType, mapOwnPropsType, appStateType>(mapStateToProps, { getFriends }),\r\n)(FriendsContainer)","import React from 'react';\r\nimport s from './Person.module.sass';\r\nimport UserIcon from \"../../../assets/images/unknown.png\";\r\nimport Status from '../Status/Status';\r\nimport FriendsContainer from '../../common/Friends/FriendsContainer'\r\nimport { photosType, profileType, usersType, userType } from '../../../types/types';\r\nimport Contact from '../../Dialogs/Contacts/Contact/Contact';\r\n\r\ntype PersonPropsType = {\r\n  profile: profileType\r\n  isOwner: boolean\r\n  status: string\r\n  user: usersType\r\n  isFollowing: boolean | null\r\n  isFollowingUser: Array<number>\r\n  savePhoto: (photo: photosType) => void, \r\n  UpdateStatus: (status: string) => void, \r\n  saveProfile: (profile: profileType) => void, \r\n  UnFollowProf: (userId: number) => void, \r\n  followProf: (userId: number) => void\r\n}\r\n\r\nconst Person: React.FC<PersonPropsType> = React.memo((props) => {\r\n  if (!props.profile) {\r\n    return (\r\n      <img src=\"https://flevix.com/wp-content/uploads/2019/07/Spin-Preloader-1.gif\"></img>\r\n    )\r\n  }\r\n  return (\r\n    <div className={s.person}>\r\n      <div className={s.firstBlock}>\r\n        <div className={s.ava}>\r\n          <img src={props.profile.photos.large || UserIcon}></img>\r\n        </div>\r\n        <ContactsData profile={props.profile} />\r\n        {(props.user && !props.isOwner) ? <Following user={props.user} isOwner={props.isOwner} follow={props.followProf} Unfollow={props.UnFollowProf} isFollowing={props.isFollowing} isFollowingUser={props.isFollowingUser} /> : null}\r\n      </div>\r\n      <div className={s.secondBlock}>\r\n        <PersonData\r\n          profile={props.profile} isOwner={props.isOwner}\r\n          UpdateStatus={props.UpdateStatus} status={props.status} />\r\n      </div>\r\n      {props.isOwner &&\r\n        <div className={s.friends}>\r\n          <h3>Подписки</h3>\r\n          <FriendsContainer />\r\n        </div>}\r\n    </div>\r\n  )\r\n})\r\n\r\ntype PersonDataPropsType = {\r\n  profile: profileType\r\n  status: string\r\n  isOwner: boolean\r\n  UpdateStatus: (status: string) => void, \r\n\r\n}\r\n\r\nconst PersonData: React.FC<PersonDataPropsType> = ({ profile, ...props }) => {\r\n  return (<div className={s.info}>\r\n    <div>\r\n      <h2 className={s.fullName}>{profile.fullName}</h2>\r\n    </div>\r\n    <div className={s.status}>\r\n      <Status status={props.status} UpdateStatus={props.UpdateStatus} isOwner={props.isOwner} />\r\n    </div>\r\n    <div>\r\n      <p>\r\n        {profile.lookingForAJob ? \"Looking for a job\" : \"No looking for a job\"}\r\n      </p>\r\n    </div>\r\n    {profile.lookingForAJobDescription || <div>{profile.lookingForAJobDescription}</div>}\r\n  </div>)\r\n}\r\n\r\ntype ContactsDataPropsType = {\r\n  profile: profileType\r\n}\r\n\r\nconst ContactsData: React.FC<ContactsDataPropsType> = ({ profile, ...props }) => {\r\n  return (\r\n    <div className={s.contacts}>{Object.keys(profile.contacts)\r\n      .map(key => {\r\n        // @ts-ignore\r\n        return <Contacts key={key} ContactValue={profile.contacts[key]} />\r\n      })}</div>\r\n  )\r\n}\r\n\r\ntype FollowingPropsType = {\r\n  isOwner: boolean\r\n  user: usersType\r\n  isFollowingUser: Array<number>\r\n  isFollowing: boolean | null\r\n  Unfollow: (id: number) => void\r\n  follow: (id: number) => void\r\n}\r\n\r\nconst Following: React.FC<FollowingPropsType> = (props) => {\r\n  if (props.isFollowing) {\r\n    return (\r\n      <button disabled={props.isFollowingUser.length > 0} onClick={() => { props.Unfollow(props.user.items[0].id) }}> Отписаться</button>\r\n    )\r\n  } else {\r\n    return (\r\n      <button disabled={props.isFollowingUser.length > 0} onClick={() => { props.follow(props.user.items[0].id) }}>Подписаться</button>\r\n    )\r\n  }\r\n}\r\n\r\ntype ContactsPropsType = {\r\n  ContactValue: string\r\n}\r\n\r\nconst Contacts: React.FC<ContactsPropsType> = ({ ContactValue }) => {\r\n  if (ContactValue) {\r\n    return (\r\n      <div className={s.contacts}>\r\n        <a href={ContactValue} className={s.contact}></a>\r\n      </div>\r\n    )\r\n  } else {return(<></>)}\r\n}\r\n\r\nexport default Person","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"Profile_body__d4rPb\"};","import React from \"react\";\r\nimport Person from './Person/Person';\r\nimport SendingPost from './SendingPost/SendingPost';\r\nimport Posts from './Posts/Posts';\r\nimport s from './Profile.module.sass'\r\nimport { photosType, profileType, usersType, userType } from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n   posts: any,\r\n   newPostText: string,\r\n   profile: profileType,\r\n   user: usersType,\r\n   isFollowing: boolean | null,\r\n   userId: number,\r\n   status: string,\r\n   friends: usersType,\r\n   isFollowingUser: Array<number>,\r\n   match: any,\r\n   isOwner: boolean\r\n   actionAddPost: (newPostText: string) => void, \r\n   getProfile: (profileId: number) => void, \r\n   SetStatus: (profileId: number) => void, \r\n   UpdateStatus: (status: string) => void, \r\n   savePhoto: (photo: photosType) => void, \r\n   saveProfile: (profile: profileType) => void, \r\n   getFriends: () => void, \r\n   getUser: (profileId: number) => void, \r\n   UnFollowProf: (userId: number) => void, \r\n   followProf: (userId: number) => void\r\n}\r\n\r\nconst Profile = React.memo<PropsType>((props) => {\r\n   return (\r\n      <div className={s.body}>\r\n         <h1>Профиль</h1>\r\n         <Person\r\n            profile={props.profile}\r\n            isOwner={props.isOwner}\r\n            savePhoto={props.savePhoto}\r\n            status={props.status}\r\n            UpdateStatus={props.UpdateStatus}\r\n            saveProfile={props.saveProfile} \r\n            user={props.user}\r\n            UnFollowProf={props.UnFollowProf}\r\n            followProf={props.followProf}\r\n            isFollowing={props.isFollowing}\r\n            isFollowingUser={props.isFollowingUser}\r\n            />\r\n      </div>\r\n   )\r\n})\r\n\r\n//posts NOT WORKED API\r\n/*\r\n<SendingPost {...props} />\r\n<Posts posts={props.posts} />\r\n*/\r\n\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  actionAddPost, getProfile, SetStatus,\r\n  UpdateStatus, savePhoto, saveProfile,\r\n  getFriends, getUser, UnFollowProf, followProf\r\n} from \"../../redux/profileReducer\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { appStateType } from \"../../redux/Store\";\r\nimport { photosType, postType, profileType, usersType } from \"../../types/types\";\r\n\r\n\r\ntype mapStateToPropsType = {\r\n  posts: Array<postType>,\r\n  newPostText: string | null,\r\n  profile: profileType | null,\r\n  user: usersType,\r\n  isFollowing: boolean | null,\r\n  userId: number | null,\r\n  status: string,\r\n  friends: usersType,\r\n  isFollowingUser: Array<number>\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n  actionAddPost: (newPostText: string) => void,\r\n  getProfile: (profileId: number) => void,\r\n  SetStatus: (profileId: number) => void,\r\n  UpdateStatus: (status: string) => void,\r\n  savePhoto: (photo: photosType) => void,\r\n  saveProfile: (profile: profileType) => void,\r\n  getFriends: () => void,\r\n  getUser: (profileId: number) => void,\r\n  UnFollowProf: (userId: number) => void,\r\n  followProf: (userId: number) => void\r\n}\r\n\r\ntype mapOwnPropsType = {}\r\n\r\ntype PropsType = {\r\n  posts: Array<postType>,\r\n  newPostText: string,\r\n  profile: profileType,\r\n  user: usersType,\r\n  isFollowing: boolean | null,\r\n  userId: number,\r\n  status: string,\r\n  friends: usersType,\r\n  isFollowingUser: Array<number>,\r\n  match: any,\r\n  actionAddPost: (newPostText: string) => void,\r\n  getProfile: (profileId: number) => void,\r\n  SetStatus: (profileId: number) => void,\r\n  UpdateStatus: (status: string) => void,\r\n  savePhoto: (photo: photosType) => void,\r\n  saveProfile: (profile: profileType) => void,\r\n  getFriends: () => void,\r\n  getUser: (profileId: number) => void,\r\n  UnFollowProf: (userId: number) => void,\r\n  followProf: (userId: number) => void\r\n}\r\n\r\n\r\nexport function withRouter(Children: any) {\r\n  return (props: any) => {\r\n    const match = { params: useParams() };\r\n    return <Children {...props} match={match} />\r\n  }\r\n}\r\n\r\nclass ProfileCont extends React.Component<PropsType> {\r\n  refreshProfile() {\r\n    let profileId = this.props.match.params.userId\r\n    if (!profileId) {\r\n      profileId = this.props.userId\r\n    }\r\n    this.props.getProfile(profileId)\r\n    this.props.SetStatus(profileId)\r\n    this.props.getUser(profileId)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n\r\n  componentDidUpdate(prevProps: any, prevState: any, snapshot: any) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshProfile()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={this.props.match.params.userId == this.props.userId}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state: appStateType) => {\r\n  return {\r\n    posts: state.profilePage.postData,\r\n    newPostText: state.profilePage.newPostText,\r\n    profile: state.profilePage.profile,\r\n    user: state.profilePage.user,\r\n    isFollowing: state.profilePage.isFollowingProf,\r\n    userId: state.auth.userId,\r\n    status: state.profilePage.status,\r\n    friends: state.profilePage.friends,\r\n    isFollowingUser: state.usersPage.isFollowing\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect\r\n    <mapStateToPropsType, mapDispatchToPropsType, mapOwnPropsType, appStateType>\r\n    (mapStateToProps, {\r\n      actionAddPost, getProfile, SetStatus,\r\n      UpdateStatus, savePhoto, saveProfile, getFriends,\r\n      getUser, UnFollowProf, followProf\r\n    }),\r\n  withRouter,\r\n  withAuthRedirect,\r\n)(ProfileCont)\r\n","import React from \"react\"\r\nimport { Navigate } from 'react-router-dom'\r\nimport { connect } from \"react-redux\"\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport const withAuthRedirect = (Container) => {\r\n  class RedirectComponent extends React.Component{\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to='/login' />\r\n\r\n      return <Container {...this.props} />\r\n    }    \r\n  }\r\n  let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n  return ConnectedRedirectComponent\r\n}\r\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["React","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","isOwner","onChange","e","currentTarget","value","onBlur","UpdateStatus","autoFocus","type","Friends","className","s","friends","items","map","item","Friend","to","id","src","photos","small","UserIcon","alt","name","FriendsContainer","this","getFriends","compose","connect","state","profilePage","Person","profile","large","ContactsData","user","Following","follow","followProf","Unfollow","UnFollowProf","isFollowing","isFollowingUser","PersonData","fullName","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","key","Contacts","ContactValue","disabled","length","onClick","href","savePhoto","saveProfile","withRouter","Children","match","params","useParams","ProfileCont","profileId","userId","getProfile","SetStatus","getUser","refreshProfile","prevProps","prevState","snapshot","posts","postData","newPostText","isFollowingProf","auth","usersPage","actionAddPost","withAuthRedirect","mapStateToProps","isAuth","Container","RedirectComponent","_objectWithoutProperties","source","excluded","i","target","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}