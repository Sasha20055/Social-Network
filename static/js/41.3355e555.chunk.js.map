{"version":3,"file":"static/js/41.3355e555.chunk.js","mappings":"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","sources":["webpack://socialn/./src/components/Profile/Person/Person.module.sass?3bd6","components/Profile/Status/Status.jsx","components/Profile/Person/PersonDataForm.jsx","webpack://socialn/./src/components/common/Friends/Friends.module.sass?110c","components/common/Friends/Friends.jsx","components/common/Friends/FriendsContainer.jsx","components/Profile/Person/Person.jsx","webpack://socialn/./src/components/Profile/SendingPost/SendingPost.module.sass?653c","components/Profile/SendingPost/SendingPost.jsx","webpack://socialn/./src/components/Profile/Posts/Post.module.sass?7179","components/Profile/Posts/Posts.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","../node_modules/@babel/runtime/helpers/esm/readOnlyError.js","components/common/FormsControls/FormsControls.jsx","hoc/withAuthRedirect.js","utilities/validation.js","webpack://socialn/./src/components/common/FormsControls/FormsControls.module.sass?7f83"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"person\":\"Person_person__hRlAr\",\"ava\":\"Person_ava__7u6m+\",\"info\":\"Person_info__O3iGS\",\"contact_item\":\"Person_contact_item__gKfNO\",\"status\":\"Person_status__kDEpD\"};","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./Status.module.sass\"\r\n\r\nconst Status = React.memo((props) => {\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [status, setStatus] = useState(props.status)\r\n\r\n  useEffect(\r\n    () => setStatus(props.status),\r\n    [props.status]\r\n  )\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.UpdateStatus(status)\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!editMode &&\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status}</span>\r\n        </div>\r\n      }\r\n      {editMode &&\r\n        <div>\r\n          {props.isOwner\r\n            ? <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status} type=\"text\" />\r\n            : <b>{status}</b>\r\n          }\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n})\r\n\r\n\r\n\r\nexport default Status","import React from 'react';\r\nimport s from './Person.module.sass';\r\nimport { createForm } from '../../common/FormsControls/FormsControls'\r\nimport { reduxForm } from 'redux-form';\r\nimport { Input } from '../../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../../utilities/validation';\r\nimport style from '../../common/FormsControls/FormsControls.module.sass';\r\n\r\n\r\n\r\nconst PersonDataForm = React.memo((props) => {\r\n  \r\n  const maxLength30 = maxLengthCreator(15)\r\n  const maxLength100 = maxLengthCreator(100)\r\n\r\n  return (\r\n    <form className={s.info} onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <b>Name</b>:\r\n        {createForm('fullName', Input, 'text', 'name...', [required, maxLength30])}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>:\r\n        {createForm('lookingForAJob', Input, 'checkbox')}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job description</b>:\r\n        {createForm('lookingForAJobDescription', Input, 'text', 'Description to a job...', [required, maxLength100])}\r\n      </div>\r\n      <div>\r\n        <b>About me</b>:\r\n        {createForm('aboutMe', Input, 'text', 'Smth about you...', [required, maxLength100])}\r\n      </div>\r\n      <div className={s.contacts}><b>Contacts</b>: {Object.keys(props.profile.contacts)\r\n        .map(key => {\r\n          return <div className={s.contacts}>\r\n            <b>{key} : {createForm('contacts.' + key, Input, 'text', key + '...')}</b>\r\n          </div>\r\n        })}</div>\r\n      <div>\r\n      {props.error && <div className={style.commonError}>{props.error}</div>}\r\n        <button>Confirm</button>\r\n      </div>\r\n    </form>)\r\n})\r\n\r\nconst PersonDataFormReduxForm = reduxForm({ form: 'personEdit'})(PersonDataForm)\r\n\r\n\r\nexport default PersonDataFormReduxForm;","// extracted by mini-css-extract-plugin\nexport default {\"friends\":\"Friends_friends__xwpru\"};","import React from \"react\";\r\nimport s from \"./Friends.module.sass\"\r\n\r\n\r\nconst Friends = React.memo((props) => {\r\n  return (\r\n    <div className={s.friends}>\r\n      {props.friends && props.friends.items.map(item => <p>{item.name}</p>)}\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Friends","import React from \"react\";\r\nimport {getFriends} from \"../../../redux/profileReducer\";\r\nimport Friends from \"./Friends\";\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass FriendsContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getFriends()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Friends {...this.props} />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    friends: state.profilePage.friends\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getFriends }),\r\n)(FriendsContainer)","import React, { useState } from 'react';\r\nimport s from './Person.module.sass';\r\nimport UserIcon from \"../../../assets/images/unknown.png\";\r\nimport Status from '../Status/Status';\r\nimport PersonDataFormReduxForm from \"./PersonDataForm\";\r\nimport FriendsContainer from '../../common/Friends/FriendsContainer'\r\n\r\n\r\n\r\n\r\n\r\nconst Person = (props) => {\r\n\r\n  const [editMode, setEditMode] = useState(false)\r\n\r\n  if (!props.profile) {\r\n    return (\r\n      <img src=\"https://flevix.com/wp-content/uploads/2019/07/Spin-Preloader-1.gif\"></img>\r\n    )\r\n  }\r\n\r\n  const photoSelected = (e) => {\r\n    props.savePhoto(e.target.files[0])\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    props.saveProfile(formData).then(\r\n      () => {\r\n        setEditMode(false)\r\n      }\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={s.person}>\r\n      <div className={s.ava}>\r\n        <img src={props.profile.photos.large || UserIcon}></img>\r\n      </div>\r\n      {editMode\r\n        ? <PersonDataFormReduxForm\r\n          initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}\r\n          isOwner={props.isOwner} UpdateStatus={props.UpdateStatus}\r\n          editMode={editMode} offToEditMode={() => setEditMode(false)} />\r\n        : <PersonData\r\n          profile={props.profile} isOwner={props.isOwner}\r\n          UpdateStatus={props.UpdateStatus} status={props.status}\r\n          editMode={editMode} goToEditMode={() => setEditMode(true)} />\r\n      }\r\n\r\n      <div className={s.choosePhoto}>\r\n        {props.isOwner && <input type={\"file\"} onChange={photoSelected} />}\r\n      </div>\r\n      <div>\r\n        <FriendsContainer />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PersonData = ({ profile, ...props }) => {\r\n  return (<div className={s.info}>\r\n    <div>\r\n      <b>Name</b>: {profile.fullName}\r\n    </div>\r\n    <div className={s.status}>\r\n      <b>Status</b>: <Status status={props.status} UpdateStatus={props.UpdateStatus} isOwner={props.isOwner} />\r\n    </div>\r\n    <div>\r\n      <b>Looking for a job</b>: {profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n    </div>\r\n    <div>\r\n      <b>About me</b>: {profile.aboutMe ? profile.aboutMe : \"Empty\"}\r\n    </div>\r\n    <div>\r\n      <b>Skills</b>: {profile.lookingForAJobDescription ? profile.lookingForAJobDescription : \"Absent\"}\r\n    </div>\r\n    <div className={s.contacts}><b>Contacts</b>: {Object.keys(profile.contacts)\r\n      .map(key => {\r\n        return <Contacts key={key} ContactTitle={key} ContactValue={profile.contacts[key]} />\r\n      })}</div>\r\n    {props.isOwner && <div><button onClick={props.goToEditMode}>Edit</button></div>}\r\n  </div>)\r\n}\r\n\r\nconst Contacts = ({ ContactTitle, ContactValue }) => {\r\n  return <div className={s.contact_item}><b>{ContactTitle}</b>: {ContactValue ? ContactValue : \"empty\"}</div>\r\n}\r\n\r\nexport default Person","// extracted by mini-css-extract-plugin\nexport default {\"sendPost\":\"SendingPost_sendPost__m-CEi\",\"input\":\"SendingPost_input__EscJ4\",\"button\":\"SendingPost_button__xm3iI\"};","import s from './SendingPost.module.sass';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../../utilities/validation';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength30 = maxLengthCreator(30)\r\n\r\nconst SendingPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field name={\"postText\"} component={Textarea} type={\"text\"} placeholder={\"your news...\"} validate={[required, maxLength30]}/>\r\n      <button>Send</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst SendingPostReduxForm = reduxForm({form: \"SendingPost\"})(SendingPostForm)\r\n\r\nconst SendingPost = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.actionAddPost(formData.postText)\r\n  }\r\n  return (\r\n    <div className={s.sendPost}>\r\n      <SendingPostReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default SendingPost","// extracted by mini-css-extract-plugin\nexport default {\"myPost\":\"Post_myPost__PRXwg\",\"postAva\":\"Post_postAva__vyOyJ\"};","import React from 'react'\r\nimport s from './Post.module.sass';\r\n\r\nconst Posts = React.memo((props) => {\r\n  return (\r\n    <div>\r\n      {\r\n        props.posts.map(post => <div key={post.id} className={s.myPost}>\r\n          <div className={s.postAva}></div>\r\n          <p className={s.postMsg}>{post.message}</p>\r\n          <p className={s.like}>Likes: {post.likes}</p>\r\n        </div>)\r\n      }\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Posts","import React from \"react\";\r\nimport Person from './Person/Person';\r\nimport SendingPost from './SendingPost/SendingPost';\r\nimport Posts from './Posts/Posts';\r\n\r\n\r\nconst Profile = React.memo((props) => {\r\n   return (\r\n      <div>\r\n         <Person\r\n            profile={props.profile}\r\n            isOwner={props.isOwner}\r\n            savePhoto={props.savePhoto}\r\n            status={props.status}\r\n            UpdateStatus={props.UpdateStatus}\r\n            saveProfile={props.saveProfile} />\r\n         <SendingPost {...props} />\r\n         <Posts posts={props.posts} />\r\n      </div>\r\n   )\r\n})\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\"\r\nimport { actionAddPost, getProfile, SetStatus, UpdateStatus, savePhoto, saveProfile, getFriends } from \"../../redux/profileReducer\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\n\r\nexport function withRouter(Children) {\r\n  return (props) => {\r\n    const match = { params: useParams() };\r\n    return <Children {...props} match={match} />\r\n  }\r\n}\r\n\r\nclass ProfileCont extends React.Component {\r\n  refreshProfile() {\r\n    const profileId = this.props.match.params.userId\r\n    if (!profileId) {\r\n      profileId = this.props.userId\r\n    }\r\n    this.props.getProfile(profileId)\r\n    this.props.SetStatus(profileId)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshProfile()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={this.props.match.params.userId == this.props.userId}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.postData,\r\n    newPostText: state.profilePage.newPostText,\r\n    profile: state.profilePage.profile,\r\n    userId: state.auth.userId,\r\n    status: state.profilePage.status,\r\n    friends: state.profilePage.friends\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { actionAddPost, getProfile, SetStatus, UpdateStatus, savePhoto, saveProfile, getFriends }),\r\n  withRouter,\r\n  withAuthRedirect,\r\n)(ProfileCont)\r\n","export default function _readOnlyError(name) {\n  throw new TypeError(\"\\\"\" + name + \"\\\" is read-only\");\n}","import React from \"react\";\r\nimport s from \"./FormsControls.module.sass\";\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error\r\n  return (\r\n    <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n      <div>\r\n        <textarea {...input} {...props} className={s.textarea} />\r\n      </div>\r\n      {hasError && <span className={s.someError}>{meta.error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Input = ({ input, meta: {touched, error}, ...props }) => {\r\n  const hasError = touched && error\r\n  return (\r\n    <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n      <div>\r\n        <input {...input} {...props} className={s.textarea} />\r\n      </div>\r\n      {hasError && <span className={s.someError}>{error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const createForm = (name, component, type, placeholder=\"\", validators=[], props = {}) => {\r\n  return (<div className={`s.${name}`}>\r\n    <Field\r\n      name={name}\r\n      component={component}\r\n      type={type}\r\n      placeholder={placeholder}\r\n      validate={validators}\r\n      {...props}\r\n    />\r\n  </div>)\r\n}","import React from \"react\"\r\nimport { Navigate } from 'react-router-dom'\r\nimport { connect } from \"react-redux\"\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport const withAuthRedirect = (Container) => {\r\n  class RedirectComponent extends React.Component{\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to='/login' />\r\n\r\n      return <Container {...this.props} />\r\n    }    \r\n  }\r\n  let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n  return ConnectedRedirectComponent\r\n}\r\n","export const required = value => {\r\n  if (value) return undefined;\r\n  return 'require error'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `max length ${maxLength} symbols!`;\r\n  return undefined\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__dV+OA\",\"error\":\"FormsControls_error__ZjcXj\",\"textarea\":\"FormsControls_textarea__xpgxZ\",\"someError\":\"FormsControls_someError__PrG3Q\",\"commonError\":\"FormsControls_commonError__Rlpkm\"};"],"names":["React","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","isOwner","onChange","e","currentTarget","value","onBlur","UpdateStatus","autoFocus","type","PersonDataForm","maxLength30","maxLengthCreator","maxLength100","className","s","onSubmit","handleSubmit","createForm","Input","required","Object","keys","profile","contacts","map","key","error","style","reduxForm","form","friends","items","item","name","FriendsContainer","this","getFriends","compose","connect","state","profilePage","PersonData","fullName","lookingForAJob","aboutMe","lookingForAJobDescription","Contacts","ContactTitle","ContactValue","onClick","goToEditMode","src","photos","large","UserIcon","initialValues","formData","saveProfile","then","offToEditMode","savePhoto","target","files","SendingPostReduxForm","Field","component","Textarea","placeholder","validate","actionAddPost","postText","posts","post","message","likes","id","withRouter","Children","match","params","useParams","ProfileCont","profileId","userId","TypeError","getProfile","SetStatus","refreshProfile","prevProps","prevState","snapshot","postData","newPostText","auth","withAuthRedirect","input","meta","hasError","touched","validators","mapStateToProps","isAuth","Container","RedirectComponent","to","maxLength","length"],"sourceRoot":""}