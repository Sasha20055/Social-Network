{"version":3,"file":"static/js/581.d2c9dc37.chunk.js","mappings":"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","sources":["webpack://socialn/./src/components/Login/Login.module.sass?2953","components/Login/Login.jsx","components/common/FormsControls/FormsControls.jsx","utilities/validation.js","webpack://socialn/./src/components/common/FormsControls/FormsControls.module.sass?7f83"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"rememberMeBlock\":\"Login_rememberMeBlock__l-OBP\",\"loginForm\":\"Login_loginForm__jG7eO\",\"body\":\"Login_body__zmV2w\",\"reg\":\"Login_reg__3Wye8\"};","import React from \"react\";\r\nimport s from './Login.module.sass';\r\nimport { Navigate } from 'react-router'\r\nimport { reduxForm } from 'redux-form';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport { required } from '../../utilities/validation';\r\nimport { login } from '../../redux/authReducer';\r\nimport { connect } from 'react-redux';\r\nimport style from '../common/FormsControls/FormsControls.module.sass';\r\nimport { createForm } from '../common/FormsControls/FormsControls';\r\n\r\n\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={s.loginForm}>\r\n      {createForm(\"email\", Input, \"text\", \"login\", [required])}\r\n      {createForm(\"password\", Input, \"password\", \"password\", [required])}\r\n      {props.captchaURL && <img src={props.captchaURL} />}\r\n      {props.captchaURL && createForm(\"captcha\", Input, \"text\", \"captcha\", [required])}\r\n      <div className={s.submit}>\r\n        <button>Войти</button>\r\n      </div>\r\n      <div className={s.rememberMeBlock}>\r\n        {createForm(\"rememberMe\", Input, \"checkbox\")}\r\n        <p>Запомнить меня</p>\r\n      </div>\r\n\r\n\r\n      {props.error && <div className={style.commonError}>{props.error}</div>}\r\n    </form>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n  }\r\n\r\n  if (props.isAuth) {\r\n    return <Navigate to={`/profile/${props.userId}`} />\r\n  }\r\n\r\n  return <div className={s.body}>\r\n    <h1>\r\n      Авторизация\r\n    </h1>\r\n    <LoginReduxForm onSubmit={onSubmit} captchaURL={props.captchaURL} />\r\n    <div className={s.reg}>\r\n      <a href=\"https://social-network.samuraijs.com/signUp\">Зарегистрироваться</a>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nconst mapDispatchToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  userId: state.auth.userId,\r\n  captchaURL: state.auth.captchaURL\r\n})\r\n\r\nexport default connect(mapDispatchToProps, { login })(Login)","import React from \"react\";\r\nimport s from \"./FormsControls.module.sass\";\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error\r\n  return (\r\n    <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n      <div>\r\n        <textarea {...input} {...props} className={s.textarea} />\r\n      </div>\r\n      {hasError && <span className={s.someError}>{meta.error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Input = ({ input, meta: {touched, error}, ...props }) => {\r\n  const hasError = touched && error\r\n  return (\r\n    <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n      <div>\r\n        <input {...input} {...props} className={s.input} />\r\n      </div>\r\n      {hasError && <span className={s.someError}>{error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const createForm = (name, component, type, placeholder=\"\", validators=[], props = {}) => {\r\n  return (<div className={`s.${name}`}>\r\n    <Field\r\n      name={name}\r\n      component={component}\r\n      type={type}\r\n      placeholder={placeholder}\r\n      validate={validators}\r\n      {...props}\r\n    />\r\n  </div>)\r\n}","export const required = value => {\r\n  if (value) return undefined;\r\n  return 'require error'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `max length ${maxLength} symbols!`;\r\n  return undefined\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__dV+OA\",\"error\":\"FormsControls_error__ZjcXj\",\"input\":\"FormsControls_input__kr6kc\",\"someError\":\"FormsControls_someError__PrG3Q\",\"commonError\":\"FormsControls_commonError__Rlpkm\",\"textarea\":\"FormsControls_textarea__xpgxZ\"};"],"names":["LoginReduxForm","reduxForm","form","props","onSubmit","handleSubmit","className","s","createForm","Input","required","captchaURL","src","error","style","connect","state","isAuth","auth","userId","login","to","formData","email","password","rememberMe","captcha","href","Textarea","input","meta","hasError","touched","name","component","type","placeholder","validators","validate","value","maxLengthCreator","maxLength","length"],"sourceRoot":""}