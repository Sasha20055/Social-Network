{"version":3,"file":"static/js/581.f88a2f9e.chunk.js","mappings":"gKACA,GAAiB,E,8EC8BXA,GAAiBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,SAAlBD,EAnBL,SAACE,GACjB,IAAMC,GAAcC,EAAAA,EAAAA,GAAiB,IACrC,OACE,kBAAMC,SAAUH,EAAMI,aAAa,WAChCC,EAAAA,EAAAA,IAAW,QAASC,EAAAA,GAAO,OAAQ,QAAS,CAACC,EAAAA,EAAUN,KACvDI,EAAAA,EAAAA,IAAW,WAAYC,EAAAA,GAAO,WAAY,WAAY,CAACC,EAAAA,EAAUN,KACjEI,EAAAA,EAAAA,IAAW,aAAcC,EAAAA,GAAO,YAEhCN,EAAMQ,QAAS,gBAAKC,UAAWC,EAAAA,EAAAA,YAAkB,SAAEV,EAAMQ,QAEzDR,EAAMW,aAAc,gBAAKC,IAAKZ,EAAMW,aACpCX,EAAMW,aAAcN,EAAAA,EAAAA,IAAW,UAAWC,EAAAA,GAAO,OAAQ,UAAW,CAACC,EAAAA,KACtE,gBAAKE,UAAWI,EAAAA,OAAS,UACvB,2CAIR,IA2BA,GAAeC,EAAAA,EAAAA,KANY,SAACC,GAAK,MAAM,CACrCC,OAAQD,EAAME,KAAKD,OACnBE,OAAQH,EAAME,KAAKC,OACnBP,WAAYI,EAAME,KAAKN,WACxB,GAE0C,CAAEQ,MAAAA,EAAAA,IAA7C,EAvBc,SAACnB,GAKb,OAAIA,EAAMgB,QACD,SAAC,KAAQ,CAACI,GAAE,mBAAcpB,EAAMkB,WAGlC,4BACL,mCAGA,SAACrB,EAAc,CAACM,SAZD,SAACkB,GAChBrB,EAAMmB,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,QAC/E,EAUsCd,WAAYX,EAAMW,eAE1D,G,6MC5Cae,EAAW,SAAH,GAAmC,IAA7BC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAS5B,GAAK,YACxC6B,EAAWD,EAAKE,SAAWF,EAAKpB,MACtC,OACE,iBAAKC,UAAWI,EAAAA,EAAAA,YAAgB,KAAOgB,EAAWhB,EAAAA,EAAAA,MAAU,IAAI,WAC9D,0BACE,+CAAcc,GAAW3B,GAAK,IAAES,UAAWI,EAAAA,EAAAA,cAE5CgB,IAAY,iBAAMpB,UAAWI,EAAAA,EAAAA,UAAY,SAAEe,EAAKpB,UAGvD,EAEaF,EAAQ,SAAH,GAAqD,IAA/CqB,EAAK,EAALA,MAAM,EAAD,EAAEC,KAAOE,EAAO,EAAPA,QAAStB,EAAK,EAALA,MAAWR,GAAK,YACvD6B,EAAWC,GAAWtB,EAC5B,OACE,iBAAKC,UAAWI,EAAAA,EAAAA,YAAgB,KAAOgB,EAAWhB,EAAAA,EAAAA,MAAU,IAAI,WAC9D,0BACE,4CAAWc,GAAW3B,GAAK,IAAES,UAAWI,EAAAA,EAAAA,cAEzCgB,IAAY,iBAAMpB,UAAWI,EAAAA,EAAAA,UAAY,SAAEL,MAGlD,EAEaH,EAAa,SAAC0B,EAAMC,EAAWC,GAAqD,IAA/CC,EAAY,UAAD,6CAAC,GAAIC,EAAW,UAAD,6CAAC,GAAInC,EAAK,uDAAG,CAAC,EACxF,OAAQ,gBAAKS,UAAS,YAAOsB,GAAO,UAClC,SAAC,KAAK,QACJA,KAAMA,EACNC,UAAWA,EACXC,KAAMA,EACNC,YAAaA,EACbE,SAAUD,GACNnC,KAGV,C,8ECvCO,IAAMO,EAAW,SAAA8B,GACtB,IAAIA,EACJ,MAAO,eACT,EAEanC,EAAmB,SAACoC,GAAS,OAAK,SAACD,GAC9C,GAAIA,EAAME,OAASD,EAAW,MAAM,cAAN,OAAqBA,EAAS,YAE9D,CAAC,C,qBCPD,KAAgB,YAAc,mCAAmC,MAAQ,6BAA6B,SAAW,gCAAgC,UAAY,iCAAiC,YAAc,mC","sources":["components/Login/Login.module.sass","components/Login/Login.jsx","components/common/FormsControls/FormsControls.jsx","utilities/validation.js","webpack://socialn/./src/components/common/FormsControls/FormsControls.module.sass?7f83"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React from \"react\";\r\nimport s from './Login.module.sass';\r\nimport { Navigate } from 'react-router'\r\nimport { reduxForm } from 'redux-form';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utilities/validation';\r\nimport { login } from '../../redux/authReducer';\r\nimport { connect } from 'react-redux';\r\nimport style from '../common/FormsControls/FormsControls.module.sass';\r\nimport {createForm} from '../common/FormsControls/FormsControls';\r\n\r\n\r\nconst LoginForm = (props) => {\r\n  const maxLength30 = maxLengthCreator(30)\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      {createForm(\"email\", Input, \"text\", \"login\", [required, maxLength30])}\r\n      {createForm(\"password\", Input, \"password\", \"password\", [required, maxLength30])}\r\n      {createForm(\"rememberMe\", Input, \"checkbox\")}\r\n\r\n      {props.error && <div className={style.commonError}>{props.error}</div>}\r\n\r\n      {props.captchaURL && <img src={props.captchaURL}/>}\r\n      {props.captchaURL && createForm(\"captcha\", Input, \"text\", \"captcha\", [required])}\r\n      <div className={s.submit}>\r\n        <button>Submit</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n  }\r\n\r\n  if (props.isAuth) {\r\n    return <Navigate to={`/profile/${props.userId}`} />\r\n  }\r\n\r\n  return <div>\r\n    <h1>\r\n      LOGIN\r\n    </h1>\r\n    <LoginReduxForm onSubmit={onSubmit} captchaURL={props.captchaURL}/>\r\n  </div>\r\n}\r\n\r\nconst mapDispatchToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  userId: state.auth.userId,\r\n  captchaURL: state.auth.captchaURL\r\n})\r\n\r\nexport default connect(mapDispatchToProps, { login })(Login)","import React from \"react\";\r\nimport s from \"./FormsControls.module.sass\";\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error\r\n  return (\r\n    <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n      <div>\r\n        <textarea {...input} {...props} className={s.textarea} />\r\n      </div>\r\n      {hasError && <span className={s.someError}>{meta.error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Input = ({ input, meta: {touched, error}, ...props }) => {\r\n  const hasError = touched && error\r\n  return (\r\n    <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n      <div>\r\n        <input {...input} {...props} className={s.textarea} />\r\n      </div>\r\n      {hasError && <span className={s.someError}>{error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const createForm = (name, component, type, placeholder=\"\", validators=[], props = {}) => {\r\n  return (<div className={`s.${name}`}>\r\n    <Field\r\n      name={name}\r\n      component={component}\r\n      type={type}\r\n      placeholder={placeholder}\r\n      validate={validators}\r\n      {...props}\r\n    />\r\n  </div>)\r\n}","export const required = value => {\r\n  if (value) return undefined;\r\n  return 'require error'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `max length ${maxLength} symbols!`;\r\n  return undefined\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__dV+OA\",\"error\":\"FormsControls_error__ZjcXj\",\"textarea\":\"FormsControls_textarea__xpgxZ\",\"someError\":\"FormsControls_someError__PrG3Q\",\"commonError\":\"FormsControls_commonError__Rlpkm\"};"],"names":["LoginReduxForm","reduxForm","form","props","maxLength30","maxLengthCreator","onSubmit","handleSubmit","createForm","Input","required","error","className","style","captchaURL","src","s","connect","state","isAuth","auth","userId","login","to","formData","email","password","rememberMe","captcha","Textarea","input","meta","hasError","touched","name","component","type","placeholder","validators","validate","value","maxLength","length"],"sourceRoot":""}