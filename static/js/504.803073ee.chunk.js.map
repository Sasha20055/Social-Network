{"version":3,"file":"static/js/504.803073ee.chunk.js","mappings":"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","sources":["webpack://socialn/./src/components/Dialogs/Dialogs.module.sass?c081","webpack://socialn/./src/components/Dialogs/Contacts/Contacts.module.sass?5432","webpack://socialn/./src/components/Dialogs/Contacts/Contact/Contact.module.sass?5895","components/Dialogs/Contacts/Contact/Contact.jsx","components/Dialogs/Contacts/Contacts.jsx","webpack://socialn/./src/components/Dialogs/Chat/Chat.module.sass?baad","webpack://socialn/./src/components/Dialogs/Chat/Writer/Writer.module.sass?d908","components/Dialogs/Chat/Writer/Writer.jsx","webpack://socialn/./src/components/Dialogs/Chat/SendingMessage/SendingMessage.module.sass?1dd9","components/Dialogs/Chat/SendingMessage/SendingMessage.jsx","components/Dialogs/Chat/Chat.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/common/FormsControls/FormsControls.jsx","hoc/withAuthRedirect.js","utilities/validation.js","webpack://socialn/./src/components/common/FormsControls/FormsControls.module.sass?7f83"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Dialogs_wrapper__DeaPX\"};","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"Contacts_contacts__oDeh0\"};","// extracted by mini-css-extract-plugin\nexport default {\"ava\":\"Contact_ava__y+ZB-\",\"contact\":\"Contact_contact__PEb8e\",\"active\":\"Contact_active__WYlI6\"};","import s from './Contact.module.sass';\r\nimport UserIcon from \"../../../../assets/images/unknown.png\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Contact = (props) => {\r\n  return (\r\n    <div className={s.contact}>\r\n      <NavLink to={'/dialogs/' + props.id} className = { navData => navData.isActive ? s.active : s.link }>\r\n        <img src={props.ava != null ? props.ava : UserIcon} className={s.ava}></img>\r\n        <p>{props.nickName}</p>\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Contact","import React from 'react'\r\nimport s from './Contacts.module.sass';\r\nimport Contact from './Contact/Contact';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../../common/FormsControls/FormsControls';\r\nimport { required } from '../../../utilities/validation';\r\n\r\n\r\nconst Contacts = React.memo((props) => {\r\n  const onSubmit = (formData) => {\r\n    props.getProfile(formData.idPerson)\r\n  }\r\n  \r\n  return (\r\n    <div className={s.contacts}>\r\n      <div className={s.findFriend}>\r\n        <FindContactReduxForm onSubmit={onSubmit} />\r\n      </div>\r\n      {(props.user && props.user.userId != props.YourId) && <Contact key={props.user.id} nickName={props.user.fullName} id={props.user.userId} ava={props.user.photos.small} />}\r\n      {props.users.map(user => <Contact key={user.id} nickName={user.userName} id={user.id} ava={user.photos.small} />)}\r\n    </div>\r\n  )\r\n})\r\n\r\nconst FindContactForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field name={\"idPerson\"} component={Input} type={\"text\"} placeholder={\"id of person\"} validate={[required]} />\r\n      <button>Write</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst FindContactReduxForm = reduxForm({ form: 'FindPerson' })(FindContactForm)\r\n\r\n\r\nexport default Contacts","// extracted by mini-css-extract-plugin\nexport default {\"chat\":\"Chat_chat__CcF6+\",\"messages\":\"Chat_messages__i7JOP\"};","// extracted by mini-css-extract-plugin\nexport default {\"you\":\"Writer_you__T2F8H\",\"me\":\"Writer_me__042Pz\",\"message\":\"Writer_message__3qKcN\",\"ava\":\"Writer_ava__xLGVz\"};","import s from './Writer.module.sass';\r\nimport UserIcon from \"../../../../assets/images/unknown.png\";\r\n\r\n\r\n\r\nconst Writer = (props) => {\r\n\r\n  const deleteMessage = () => {\r\n    props.deleteForMe(props.message.id)\r\n  }\r\n  const messageToSpam = () => {\r\n    props.messageToSpam(props.message.id)\r\n  }\r\n\r\n  return (\r\n    <div className={props.isMe ? s.me : s.you}>\r\n      {props.isMe \r\n      ? <img src={props.profile.photos.small || UserIcon} className={s.ava}></img> \r\n      : <img src={props.chatWith[0].photos.small || UserIcon} className={s.ava}></img>}\r\n      <div className={s.message}>\r\n        <p>{props.message.body}</p>\r\n      </div>\r\n      <div>\r\n        <div className={s.viewed}>\r\n          {props.message.viewed ? <p>viewed</p> : <p>unViewed</p>}\r\n        </div>\r\n        <div className={s.delete}>\r\n          <button onClick={deleteMessage}>delete</button>\r\n        </div>\r\n        <div className={s.spam}>\r\n          <button onClick={messageToSpam}>spam</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Writer","// extracted by mini-css-extract-plugin\nexport default {\"sendingMessage\":\"SendingMessage_sendingMessage__zuO8x\"};","import React from 'react';\r\nimport s from './SendingMessage.module.sass';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {Input} from '../../../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator } from '../../../../utilities/validation';\r\n\r\n\r\n\r\nconst SendingMessageForm = (props) => {\r\n  const maxLength30 = maxLengthCreator(100)\r\n  return(\r\n    <form onSubmit={props.handleSubmit}>\r\n        <Field name={props.nameForm} component={Input} type={\"text\"} placeholder={\"message\"} />\r\n        <button>Send</button>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nconst DialogReduxForm = reduxForm({form: 'dialog'})(SendingMessageForm)\r\n\r\n\r\nconst SendingMessage = (props) => {\r\n  let nameForm = `message${props.chatWith.length > 0 && props.chatWith[0].id}` \r\n  const onSubmit = (formData) => {\r\n    // видит formData  но не видит nameForm console.log(formData.nameForm)\r\n\r\n    //props.sendMessage(props.chatWith.length > 0 ? props.chatWith[0].id : props.profile.userId, formData.nameForm)\r\n  }\r\n\r\n  return (\r\n    <div className={s.sendingMessage}>\r\n      <DialogReduxForm onSubmit={onSubmit} chatWith={props.chatWith} nameForm={nameForm}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SendingMessage","import React from 'react';\r\nimport s from './Chat.module.sass';\r\nimport Writer from './Writer/Writer';\r\nimport SendingMessage from './SendingMessage/SendingMessage'\r\n\r\n\r\nconst Chat = React.memo((props) => {\r\n\r\n  const message = props.messageData\r\n    .map(message => <Writer\r\n      key={message.id}\r\n      message={message}\r\n      isMe={message.senderId === props.YourId}\r\n      deleteForMe={props.deleteForMe}\r\n      chatWith={props.chatWith}\r\n      profile={props.profile}\r\n      messageToSpam={props.messageToSpam}\r\n    />)\r\n\r\n  let countViewMsg = props.pageSize + ((props.currentPage - 1) * 20)\r\n\r\n  const start = () => {\r\n    props.SetCurrentPage(1)\r\n    props.SetPageSize(5)\r\n    props.listOfMessages(props.chatWith[0].id, 1, 5)\r\n\r\n  }\r\n\r\n  const more = () => {\r\n    if (props.pageSize >= 15) {\r\n      if (props.currentPage < props.portionCount) {\r\n        props.SetCurrentPage(props.currentPage + 1)\r\n        props.SetPageSize(0)\r\n      } else {\r\n        props.SetCurrentPage(1)\r\n      }\r\n      props.SetPageSize(0)\r\n    } else if (props.pageSize < 15 && props.totalMessageCount > countViewMsg) {\r\n      props.SetPageSize(props.pageSize + 5)\r\n    }\r\n\r\n    props.listOfMessages(props.chatWith[0].id, props.currentPage, props.pageSize + 5)\r\n  }\r\n\r\n  return (\r\n    <div className={s.chat}>\r\n\r\n      <div className={s.messages}>\r\n        {message}\r\n      </div>\r\n      <div>\r\n        {props.totalMessageCount > countViewMsg && <button onClick={() => { more() }}>more</button>}\r\n        {props.totalMessageCount <= countViewMsg && <button onClick={() => { start() }}>start</button>}\r\n        {props.currentPage}\r\n      </div>\r\n      {props.users && <SendingMessage\r\n        sendMessage={props.sendMessage}\r\n        users={props.users}\r\n        chatWith={props.chatWith}\r\n        profile={props.profile}\r\n      />}\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Chat","import s from './Dialogs.module.sass';\r\nimport Contacts from './Contacts/Contacts';\r\nimport Chat from './Chat/Chat';\r\n\r\nconst Dialogs = (props) => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <Contacts users={props.users} getProfile={props.getProfile} user={props.user} YourId={props.YourId}/>\r\n      <Chat\r\n        messageData={props.messageData}\r\n        sendMessage={props.sendMessage}\r\n        chatWith={props.chatWith}\r\n        deleteForMe={props.deleteForMe}\r\n        YourId={props.YourId}\r\n        profile={props.profile}\r\n        listOfMessages={props.listOfMessages}\r\n        SetPageSize={props.SetPageSize}\r\n        currentPage={props.currentPage}\r\n        totalMessageCount={props.totalMessageCount}\r\n        pageSize={props.pageSize}\r\n        messageToSpam={props.messageToSpam}\r\n        users={props.users}\r\n        portionCount={props.portionCount}\r\n        SetCurrentPage={props.SetCurrentPage}\r\n      />\r\n      {props.newMessages > 0 && <div>New Messages: {props.newMessages}</div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs","import React, {useState} from \"react\";\r\nimport { connect } from \"react-redux\"\r\nimport { listOfMessages, sendMessage, deleteForMe, allDialogs, SetPageSize, messageToSpam, listOfNewMessages, SetCurrentPage, startChatting } from '../../redux/dialogsReducer';\r\nimport { getProfile } from \"../../redux/profileReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nexport function withRouter(Children) {\r\n  return (props) => {\r\n    const match = { params: useParams() };\r\n    return <Children {...props} match={match} />\r\n  }\r\n}\r\n\r\n\r\n\r\nclass DialogsCont extends React.Component {\r\n  \r\n  startTheDialog() {\r\n    const userId = this.props.match.params.userId\r\n    if (userId != null) {\r\n      this.props.startChatting(userId, this.props.currentPage, this.props.pageSize)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getProfile(this.props.YourId)\r\n    this.props.listOfNewMessages()\r\n    this.props.allDialogs()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      let isFriend = false\r\n      this.props.users.map(user => user.id == this.props.match.params.userId ? isFriend = true : null)\r\n      if(isFriend && this.props.profile.userId != this.props.YourId) {\r\n        this.props.getProfile(this.props.YourId)\r\n      }\r\n      this.startTheDialog()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (<>\r\n      <Dialogs\r\n        {...this.props}\r\n      />\r\n    </>)\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    chatWith: state.dialogsPage.chatWith,\r\n    users: state.dialogsPage.accounts,\r\n    messageData: state.dialogsPage.messages,\r\n    user: state.profilePage.profile,\r\n    YourId: state.auth.userId,\r\n    profile: state.profilePage.profile,\r\n    currentPage: state.dialogsPage.currentPage,\r\n    totalMessageCount: state.dialogsPage.totalMessageCount,\r\n    pageSize: state.dialogsPage.pageSize,\r\n    newMessages: state.dialogsPage.newMessages,\r\n    portionCount: state.dialogsPage.portionCount\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps,\r\n    {\r\n      listOfMessages, sendMessage,\r\n      deleteForMe, getProfile,\r\n      allDialogs, SetPageSize,\r\n      messageToSpam, listOfNewMessages,\r\n      SetCurrentPage, startChatting\r\n    }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(DialogsCont)","import React from \"react\";\r\nimport s from \"./FormsControls.module.sass\";\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error\r\n  return (\r\n    <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n      <div>\r\n        <textarea {...input} {...props} className={s.textarea} />\r\n      </div>\r\n      {hasError && <span className={s.someError}>{meta.error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Input = ({ input, meta: {touched, error}, ...props }) => {\r\n  const hasError = touched && error\r\n  return (\r\n    <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n      <div>\r\n        <input {...input} {...props} className={s.textarea} />\r\n      </div>\r\n      {hasError && <span className={s.someError}>{error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const createForm = (name, component, type, placeholder=\"\", validators=[], props = {}) => {\r\n  return (<div className={`s.${name}`}>\r\n    <Field\r\n      name={name}\r\n      component={component}\r\n      type={type}\r\n      placeholder={placeholder}\r\n      validate={validators}\r\n      {...props}\r\n    />\r\n  </div>)\r\n}","import React from \"react\"\r\nimport { Navigate } from 'react-router-dom'\r\nimport { connect } from \"react-redux\"\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport const withAuthRedirect = (Container) => {\r\n  class RedirectComponent extends React.Component{\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to='/login' />\r\n\r\n      return <Container {...this.props} />\r\n    }    \r\n  }\r\n  let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n  return ConnectedRedirectComponent\r\n}\r\n","export const required = value => {\r\n  if (value) return undefined;\r\n  return 'require error'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `max length ${maxLength} symbols!`;\r\n  return undefined\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__dV+OA\",\"error\":\"FormsControls_error__ZjcXj\",\"textarea\":\"FormsControls_textarea__xpgxZ\",\"someError\":\"FormsControls_someError__PrG3Q\",\"commonError\":\"FormsControls_commonError__Rlpkm\"};"],"names":["props","className","s","to","id","navData","isActive","src","ava","UserIcon","nickName","Contacts","React","FindContactReduxForm","onSubmit","formData","getProfile","idPerson","user","userId","YourId","fullName","photos","small","users","map","userName","reduxForm","form","handleSubmit","Field","name","component","Input","type","placeholder","validate","required","isMe","profile","chatWith","message","body","viewed","onClick","deleteForMe","messageToSpam","DialogReduxForm","maxLengthCreator","nameForm","length","messageData","senderId","countViewMsg","pageSize","currentPage","totalMessageCount","portionCount","SetCurrentPage","SetPageSize","listOfMessages","sendMessage","newMessages","withRouter","Children","match","params","useParams","DialogsCont","this","startChatting","listOfNewMessages","allDialogs","prevProps","prevState","snapshot","isFriend","startTheDialog","compose","connect","state","dialogsPage","accounts","messages","profilePage","auth","withAuthRedirect","Textarea","input","meta","hasError","touched","error","createForm","validators","mapStateToProps","isAuth","Container","RedirectComponent","value","maxLength"],"sourceRoot":""}