{"version":3,"file":"static/js/900.3319c398.chunk.js","mappings":"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","sources":["webpack://socialn/./src/components/Profile/Person/Person.module.sass?3bd6","components/Profile/Person/Person.jsx","components/Profile/Status/Status.jsx","webpack://socialn/./src/components/Profile/SendingPost/SendingPost.module.sass?653c","components/Profile/SendingPost/SendingPost.jsx","webpack://socialn/./src/components/Profile/Head/Head.module.sass?0a75","components/Profile/Head/Head.jsx","webpack://socialn/./src/components/Profile/Posts/Post.module.sass?7179","components/Profile/Posts/Posts.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","../node_modules/@babel/runtime/helpers/esm/readOnlyError.js","components/common/FormsControls/FormsControls.jsx","hoc/withAuthRedirect.js","utilities/validation.js","webpack://socialn/./src/components/common/FormsControls/FormsControls.module.sass?7f83"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"person\":\"Person_person__hRlAr\",\"ava\":\"Person_ava__7u6m+\",\"info\":\"Person_info__O3iGS\"};","import React from 'react'\r\nimport s from './Person.module.sass'\r\n\r\n\r\nconst Person = React.memo((props) => {\r\n  if (!props.profile) {\r\n    return (\r\n      <img src=\"https://flevix.com/wp-content/uploads/2019/07/Spin-Preloader-1.gif\"></img>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={s.person}>\r\n      <div className={s.ava}>\r\n        <img src={props.profile.photos.small}></img>\r\n      </div>\r\n      <div className={s.info}>\r\n        <h2>{props.profile.fullName}</h2>\r\n        <div>{props.profile.aboutMe}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Person","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./Status.module.sass\"\r\n\r\nconst Status = React.memo((props) => {\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [status, setStatus] = useState(props.status)\r\n\r\n  useEffect(\r\n    () => setStatus(props.status),\r\n    [props.status]\r\n  )\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.UpdateStatus(status)\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!editMode &&\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status}</span>\r\n        </div>\r\n      }\r\n      {editMode &&\r\n        <div>\r\n          <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status} type=\"text\" />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n})\r\n\r\n\r\nexport default Status","// extracted by mini-css-extract-plugin\nexport default {\"sendPost\":\"SendingPost_sendPost__m-CEi\",\"input\":\"SendingPost_input__EscJ4\",\"button\":\"SendingPost_button__xm3iI\"};","import s from './SendingPost.module.sass';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../../utilities/validation';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength30 = maxLengthCreator(30)\r\n\r\nconst SendingPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field name={\"postText\"} component={Textarea} type={\"text\"} placeholder={\"your news...\"} validate={[required, maxLength30]}/>\r\n      <button>Send</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst SendingPostReduxForm = reduxForm({form: \"SendingPost\"})(SendingPostForm)\r\n\r\nconst SendingPost = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.actionAddPost(formData.postText)\r\n  }\r\n  return (\r\n    <div className={s.sendPost}>\r\n      <SendingPostReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default SendingPost","// extracted by mini-css-extract-plugin\nexport default {\"head\":\"Head_head__U8+gE\"};","import React from 'react'\r\nimport s from './Head.module.sass'\r\n\r\nconst Head = React.memo(() => {\r\n  return (\r\n      <div className={s.head}></div>\r\n  )\r\n})\r\n\r\nexport default Head","// extracted by mini-css-extract-plugin\nexport default {\"myPost\":\"Post_myPost__PRXwg\",\"postAva\":\"Post_postAva__vyOyJ\"};","import React from 'react'\r\nimport s from './Post.module.sass';\r\n\r\nconst Posts = React.memo((props) => {\r\n  return (\r\n    <div>\r\n      {\r\n        props.posts.map(post => <div className={s.myPost}>\r\n          <div className={s.postAva}></div>\r\n          <p className={s.postMsg}>{post.message}</p>\r\n          <p className={s.like}>Likes: {post.likes}</p>\r\n        </div>)\r\n      }\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Posts","import Person from './Person/Person';\r\nimport Status from './Status/Status';\r\nimport SendingPost from './SendingPost/SendingPost';\r\nimport Head from './Head/Head';\r\nimport Posts from './Posts/Posts'\r\nimport React from 'react';\r\n\r\n\r\nconst Profile = React.memo((props) => {\r\n   return (\r\n      <div>\r\n         <Head />\r\n         <Status status={props.status} UpdateStatus={props.UpdateStatus} />\r\n         <Person profile={props.profile}/>\r\n         <SendingPost {...props} />\r\n         <Posts posts={props.posts}/>\r\n      </div>\r\n   )\r\n})\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport Post from \"./Posts/Posts\";\r\nimport { connect } from \"react-redux\"\r\nimport { actionAddPost, getProfile, SetStatus, UpdateStatus } from \"../../redux/profileReducer\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\n\r\nexport function withRouter(Children) {\r\n  return (props) => {\r\n    const match = { params: useParams() };\r\n    return <Children {...props} match={match} />\r\n  }\r\n}\r\n\r\nclass ProfileCont extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const profileId = this.props.match.params.userId\r\n    if (!profileId) {\r\n      profileId = this.props.userId\r\n    }\r\n    this.props.getProfile(profileId)\r\n    this.props.SetStatus(profileId)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.postData,\r\n    newPostText: state.profilePage.newPostText,\r\n    profile: state.profilePage.profile,\r\n    userId: state.auth.userId,\r\n    status: state.profilePage.status\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { actionAddPost, getProfile, SetStatus, UpdateStatus }),\r\n  withRouter,\r\n  withAuthRedirect,\r\n)(ProfileCont)\r\n","export default function _readOnlyError(name) {\n  throw new TypeError(\"\\\"\" + name + \"\\\" is read-only\");\n}","import React from \"react\";\r\nimport s from \"./FormsControls.module.sass\";\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error\r\n  return (\r\n    <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n      <div>\r\n        <textarea {...input} {...props} className={s.textarea} />\r\n      </div>\r\n      {hasError && <span className={s.someError}>{meta.error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Input = ({ input, meta: {touched, error}, ...props }) => {\r\n  const hasError = touched && error\r\n  return (\r\n    <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n      <div>\r\n        <input {...input} {...props} className={s.textarea} />\r\n      </div>\r\n      {hasError && <span className={s.someError}>{error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const createForm = (name, component, type, placeholder=\"\", validators=[], props = {}) => {\r\n  return (<div className={`s.${name}`}>\r\n    <Field\r\n      name={name}\r\n      component={component}\r\n      type={type}\r\n      placeholder={placeholder}\r\n      validate={validators}\r\n      {...props}\r\n    />\r\n  </div>)\r\n}","import React from \"react\"\r\nimport { Navigate } from 'react-router-dom'\r\nimport { connect } from \"react-redux\"\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport const withAuthRedirect = (Container) => {\r\n  class RedirectComponent extends React.Component{\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to='/login' />\r\n\r\n      return <Container {...this.props} />\r\n    }    \r\n  }\r\n  let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n  return ConnectedRedirectComponent\r\n}\r\n","export const required = value => {\r\n  if (value) return undefined;\r\n  return 'require error'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `max length ${maxLength} symbols!`;\r\n  return undefined\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__dV+OA\",\"error\":\"FormsControls_error__ZjcXj\",\"textarea\":\"FormsControls_textarea__xpgxZ\",\"someError\":\"FormsControls_someError__PrG3Q\",\"commonError\":\"FormsControls_commonError__Rlpkm\"};"],"names":["React","props","profile","className","s","src","photos","small","fullName","aboutMe","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","UpdateStatus","autoFocus","type","maxLength30","maxLengthCreator","SendingPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","formData","actionAddPost","postText","posts","map","post","message","likes","withRouter","Children","match","params","useParams","ProfileCont","profileId","this","userId","TypeError","getProfile","SetStatus","compose","connect","state","profilePage","postData","newPostText","auth","withAuthRedirect","input","meta","hasError","touched","error","Input","createForm","validators","mapStateToProps","isAuth","Container","RedirectComponent","to","maxLength","length"],"sourceRoot":""}